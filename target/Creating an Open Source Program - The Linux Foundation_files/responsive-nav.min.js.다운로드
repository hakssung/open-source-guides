/*! responsive-nav.js 1.0.40
 * https://github.com/viljamis/responsive-nav.js
 * http://responsive-nav.com
 *
 * Copyright (c) 2014 @viljamis
 * Available under the MIT license
 */
! function(e, t, n) {
    "use strict";
    var o = function(o, s) {
        var i = !!t.getComputedStyle,
            a = !!e.getElementsByClassName;
        i || (t.getComputedStyle = function(e) {
            return this.el = e, this.getPropertyValue = function(t) {
                var n = /(\-([a-z]){1})/g;
                return "float" === t && (t = "styleFloat"), n.test(t) && (t = t.replace(n, function() {
                    return arguments[2].toUpperCase()
                })), e.currentStyle[t] ? e.currentStyle[t] : null
            }, this
        }), a || (e.getElementsByClassName = function(t) {
            var n, o, s = [],
                i = e.getElementsByTagName("*");
            for (t = " " + t + " ", n = 0; n < i.length; n++) o = i[n], (" " + (o.className || o.getAttribute("class")) + " ").indexOf(t) > -1 && s.push(o);
            return s
        });
        var r, c, l, h, u, d, p, v = function(e, t, n, o) {
                if ("addEventListener" in e) try {
                    e.addEventListener(t, n, o)
                } catch (s) {
                    if ("object" != typeof n || !n.handleEvent) throw s;
                    e.addEventListener(t, function(e) {
                        n.handleEvent.call(n, e)
                    }, o)
                } else "attachEvent" in e && ("object" == typeof n && n.handleEvent ? e.attachEvent("on" + t, function() {
                    n.handleEvent.call(n)
                }) : e.attachEvent("on" + t, n))
            },
            f = function(e, t, n, o) {
                if ("removeEventListener" in e) try {
                    e.removeEventListener(t, n, o)
                } catch (s) {
                    if ("object" != typeof n || !n.handleEvent) throw s;
                    e.removeEventListener(t, function(e) {
                        n.handleEvent.call(n, e)
                    }, o)
                } else "detachEvent" in e && ("object" == typeof n && n.handleEvent ? e.detachEvent("on" + t, function() {
                    n.handleEvent.call(n)
                }) : e.detachEvent("on" + t, n))
            },
            g = function(e) {
                if (e.children.length < 1) throw new Error("The Nav container has no containing elements");
                for (var t = [], n = 0; n < e.children.length; n++) 1 === e.children[n].nodeType && t.push(e.children[n]);
                return t
            },
            m = function(e, t) {
                for (var n in t) e.setAttribute(n, t[n])
            },
            y = function(e, t) {
                w(e, t) || (e.className += " " + t, e.className = e.className.replace(/(^\s*)|(\s*$)/g, ""))
            },
            E = function(e, t) {
                var n = new RegExp("(\\s|^)" + t + "(\\s|$)");
                e.className = e.className.replace(n, " ").replace(/(^\s*)|(\s*$)/g, "")
            },
            w = function(e, t) {
                return e.className && new RegExp("(\\s|^)" + t + "(\\s|$)").test(e.className)
            },
            _ = function(e, t, n) {
                for (var o = 0; o < e.length; o++) t.call(n, o, e[o])
            },
            b = e.createElement("style"),
            N = e.documentElement,
            C = function(t, n) {
                var o;
                this.options = {
                    animate: !0,
                    transition: 284,
                    label: "Menu",
                    insert: "before",
                    customToggle: "",
                    closeOnNavClick: !1,
                    openPos: "relative",
                    navClass: "nav-collapse",
                    navActiveClass: "js-nav-active",
                    jsClass: "js",
                    init: function() {},
                    open: function() {},
                    close: function() {}
                };
                for (o in n) this.options[o] = n[o];
                if (y(N, this.options.jsClass), this.wrapperEl = t.replace("#", ""), e.getElementById(this.wrapperEl)) this.wrapper = e.getElementById(this.wrapperEl);
                else {
                    if (!e.querySelector(this.wrapperEl)) throw new Error("The nav element you are trying to select doesn't exist");
                    this.wrapper = e.querySelector(this.wrapperEl)
                }
                this.wrapper.inner = g(this.wrapper), c = this.options, r = this.wrapper, this._init(this)
            };
        return C.prototype = {
            destroy: function() {
                this._removeStyles(), E(r, "closed"), E(r, "opened"), E(r, c.navClass), E(r, c.navClass + "-" + this.index), E(N, c.navActiveClass), r.removeAttribute("style"), r.removeAttribute("aria-hidden"), f(t, "resize", this, !1), f(e.body, "touchmove", this, !1), f(l, "touchstart", this, !1), f(l, "touchend", this, !1), f(l, "mouseup", this, !1), f(l, "keyup", this, !1), f(l, "click", this, !1);
                var n = this;
                _(h, function(e, t) {
                    f(t, "touchstart", n, !1), f(t, "touchend", n, !1), f(t, "mouseup", n, !1), f(t, "keyup", n, !1), f(t, "click", n, !1)
                }), c.customToggle ? l.removeAttribute("aria-hidden") : l.parentNode.removeChild(l)
            },
            toggle: function() {
                u === !0 && (p ? this.close() : this.open(), this._enablePointerEvents())
            },
            open: function() {
                p || (E(r, "closed"), y(r, "opened"), y(N, c.navActiveClass), y(l, "active"), r.style.position = c.openPos, m(r, {
                    "aria-hidden": "false"
                }), p = !0, c.open())
            },
            close: function() {
                p && (y(r, "closed"), E(r, "opened"), E(N, c.navActiveClass), E(l, "active"), m(r, {
                    "aria-hidden": "true"
                }), c.animate ? (u = !1, setTimeout(function() {
                    r.style.position = "absolute", u = !0, E(r, "dropdown-active"), _(h, function(e, t) {
                        E(t.parentNode, "opened")
                    })
                }, c.transition + 10)) : (r.style.position = "absolute", E(r, "dropdown-active"), _(h, function(e, t) {
                    E(t.parentNode, "opened")
                })), p = !1, c.close())
            },
            resize: function() {
                "none" !== t.getComputedStyle(l, null).getPropertyValue("display") ? (d = !0, m(l, {
                    "aria-hidden": "false"
                }), r.className.match(/(^|\s)closed(\s|$)/) && (m(r, {
                    "aria-hidden": "true"
                }), r.style.position = "absolute"), this._createStyles(), this._calcHeight()) : (d = !1, m(l, {
                    "aria-hidden": "true"
                }), m(r, {
                    "aria-hidden": "false"
                }), r.style.position = c.openPos, E(r, "dropdown-active"), _(h, function(e, t) {
                    E(t.parentNode, "opened")
                }), this._removeStyles())
            },
            handleEvent: function(e) {
                var n = e || t.event;
                switch (n.type) {
                    case "touchstart":
                        this._onTouchStart(n);
                        break;
                    case "touchmove":
                        this._onTouchMove(n);
                        break;
                    case "touchend":
                    case "mouseup":
                        this._onTouchEnd(n);
                        break;
                    case "click":
                        this._preventDefault(n);
                        break;
                    case "keyup":
                        this._onKeyUp(n);
                        break;
                    case "resize":
                        this.resize(n)
                }
            },
            _init: function() {
                this.index = n++, y(r, c.navClass), y(r, c.navClass + "-" + this.index), y(r, "closed"), u = !0, p = !1, this._closeOnNavClick(), this._createToggle(), this._createDropdowns(), this._transitions(), this.resize();
                var o = this;
                setTimeout(function() {
                    o.resize()
                }, 20), v(t, "resize", this, !1), v(e.body, "touchmove", this, !1), v(l, "touchstart", this, !1), v(l, "touchend", this, !1), v(l, "mouseup", this, !1), v(l, "keyup", this, !1), v(l, "click", this, !1), c.init()
            },
            _createStyles: function() {
                b.parentNode || (b.type = "text/css", e.getElementsByTagName("head")[0].appendChild(b))
            },
            _removeStyles: function() {
                b.parentNode && b.parentNode.removeChild(b)
            },
            _createToggle: function() {
                if (c.customToggle) {
                    var t = c.customToggle.replace("#", "");
                    if (e.getElementById(t)) l = e.getElementById(t);
                    else {
                        if (!e.querySelector(t)) throw new Error("The custom nav toggle you are trying to select doesn't exist");
                        l = e.querySelector(t)
                    }
                } else {
                    var n = e.createElement("a");
                    n.innerHTML = c.label, m(n, {
                        href: "#",
                        "class": "nav-toggle"
                    }), "after" === c.insert ? r.parentNode.insertBefore(n, r.nextSibling) : r.parentNode.insertBefore(n, r), l = n
                }
            },
            _createDropdowns: function() {
                var t = this;
                h = a ? r.getElementsByClassName("dropdown-toggle") : e.getElementsByClassName("dropdown-toggle"), _(h, function(e, n) {
                    v(n, "touchstart", t, !1), v(n, "touchend", t, !1), v(n, "mouseup", t, !1), v(n, "keyup", t, !1), v(n, "click", t, !1)
                })
            },
            _toggleDropdown: function(e) {
                y(r, "dropdown-active");
                var t = e.parentNode,
                    n = w(t.parentNode.parentNode, "dropdown");
                w(t, "opened") ? (E(t, "opened"), n || E(r, "dropdown-active")) : n ? (_(g(t.parentNode), function(e, t) {
                    E(t, "opened")
                }), y(t, "opened")) : (_(h, function(e, t) {
                    E(t.parentNode, "opened")
                }), y(t, "opened")), this._enablePointerEvents()
            },
            _closeOnNavClick: function() {
                if (c.closeOnNavClick) {
                    var e = r.getElementsByTagName("a"),
                        t = this;
                    _(e, function(n) {
                        v(e[n], "click", function() {
                            d && t.toggle()
                        }, !1)
                    })
                }
            },
            _preventDefault: function(e) {
                return e.preventDefault ? (e.stopImmediatePropagation && e.stopImmediatePropagation(), e.preventDefault(), e.stopPropagation(), !1) : void(e.returnValue = !1)
            },
            _onTouchStart: function(t) {
                this._preventDefault(t), y(e.body, "disable-pointer-events"), this.startX = t.touches[0].clientX, this.startY = t.touches[0].clientY, this.touchHasMoved = !1, f(t.target, "mouseup", this, !1)
            },
            _onTouchMove: function(e) {
                (Math.abs(e.touches[0].clientX - this.startX) > 10 || Math.abs(e.touches[0].clientY - this.startY) > 10) && (this._enablePointerEvents(), this.touchHasMoved = !0)
            },
            _onTouchEnd: function(e) {
                if (this._preventDefault(e), d) {
                    var n = e || t.event,
                        o = n.target || n.srcElement,
                        s = !1;
                    if (w(o, "dropdown-toggle") && (s = !0), !this.touchHasMoved) {
                        if ("touchend" === e.type) return void(s ? this._toggleDropdown(o) : this.toggle());
                        var i = e || t.event;
                        3 !== i.which && 2 !== i.button && (s ? this._toggleDropdown(o) : this.toggle())
                    }
                }
            },
            _onKeyUp: function(e) {
                var n = e || t.event,
                    o = e.target,
                    s = !1;
                w(o, "dropdown-toggle") && (s = !0), 13 === n.keyCode && (s ? this._toggleDropdown(o) : this.toggle())
            },
            _enablePointerEvents: function() {
                E(e.body, "disable-pointer-events")
            },
            _transitions: function() {
                if (c.animate) {
                    var e = r.style,
                        t = "max-height " + c.transition + "ms";
                    e.WebkitTransition = t, e.MozTransition = t, e.OTransition = t, e.transition = t
                }
            },
            _calcHeight: function() {
                for (var e = 0, t = 0; t < r.inner.length; t++) e += r.inner[t].offsetHeight;
                var n = "." + c.jsClass + " ." + c.navClass + "-" + this.index + ".opened{max-height:" + e + "px !important} ." + c.jsClass + " .disable-pointer-events{pointer-events:none !important} ." + c.jsClass + " ." + c.navClass + "-" + this.index + ".opened.dropdown-active {max-height:9999px !important}";
                b.styleSheet ? b.styleSheet.cssText = n : b.innerHTML = n, n = ""
            }
        }, new C(o, s)
    };
    t.responsiveNav = o
}(document, window, 0);